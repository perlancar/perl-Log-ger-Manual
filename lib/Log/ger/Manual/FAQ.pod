package Log::ger::Manual::FAQ;

# DATE
# VERSION

1;
# ABSTRACT: FAQ on Log::ger

=head1 OUTPUT

=head2 How to create multiple loggers?

For example, in L<Log::Any>:

 my $log = Log::Any->get_logger;
 my $log_dump = Log::Any->get_logger(category => "dump"); # to dump contents

 $log->debugf("Headers is: %s", $http_res->{headers});
 $log_dump->debug($http_res->{content});

in Log::ger:

 # instead of installing to package, we setup objects (or hashes) for the
 # secondary loggers
 my $log_dump = Log::ger->get_logger(category => "dump");

 log_debug("Headers is: %s", $http_res->{headers});
 $log_dump->debug($http_res->{content});

=head2 How to send logs to several outputs?

TODO

=head2 How to send debug messages to screen, but warnings/errors to file?

TODO

=head2 How to send debug messages to a file, but warnings/errors to another file?

TODO

=head2 How to log warnings/die messages?


=head1 LEVEL

=head2 How to use custom levels?

TODO


=head1 FORMAT

=head2 How to do custom formatting?

For example, a la L<Log::Contextual>:

 log_warn { 'The number of stuffs is: ' . $obj->stuffs_count };

See L<Log::ger::Format::Block> for an example.

=head2 How to add timestamps?

TODO


=head1 TARGETS

=head2 How to customize format, output, filter on a per-target basis?

TODO


=head1 SEE ALSO
